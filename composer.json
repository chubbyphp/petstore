{
    "name": "chubbyphp/chubbyphp-framework-skeleton",
    "description": "A minimal skeleton for slim framework",
    "keywords": [
        "chubbyphp",
        "framework",
        "slim",
        "skeleton"
    ],
    "license": "MIT",
    "authors": [
        {
            "name": "Dominik Zogg",
            "email": "dominik.zogg@gmail.com"
        }
    ],
    "require": {
        "php": "^8.0",
        "chubbyphp/chubbyphp-api-http": "^4.2",
        "chubbyphp/chubbyphp-clean-directories": "^1.2",
        "chubbyphp/chubbyphp-cors": "^1.4",
        "chubbyphp/chubbyphp-deserialization": "^3.4.1",
        "chubbyphp/chubbyphp-laminas-config": "^1.3",
        "chubbyphp/chubbyphp-laminas-config-doctrine": "^2.0",
        "chubbyphp/chubbyphp-laminas-config-factory": "^1.2",
        "chubbyphp/chubbyphp-negotiation": "^1.9",
        "chubbyphp/chubbyphp-serialization": "^3.2",
        "chubbyphp/chubbyphp-validation": "^3.12.3",
        "doctrine/orm": "^2.13.1",
        "monolog/monolog": "^2.3.5",
        "ramsey/uuid": "^4.2.3",
        "slim/slim": "^4.9",
        "slim/psr7": "^1.5",
        "swagger-api/swagger-ui": "^4.6.1",
        "symfony/console": "^5.4.11|^6.1.3"
    },
    "require-dev": {
        "chubbyphp/chubbyphp-dev-helper": "dev-master",
        "chubbyphp/chubbyphp-mock": "^1.6.2",
        "infection/infection": "^0.26.5",
        "php-coveralls/php-coveralls": "^2.5.2",
        "phploc/phploc": "^7.0.2",
        "phpstan/extension-installer": "^1.1",
        "phpstan/phpstan": "^1.4.8",
        "phpunit/phpunit": "^9.5.17"
    },
    "autoload": {
        "psr-4": {
            "App\\": "src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "App\\Tests\\": "tests/"
        }
    },
    "config": {
        "sort-packages": true,
        "allow-plugins": {
            "infection/extension-installer": true,
            "phpstan/extension-installer": true
        }
    },
    "scripts": {
        "clean-directories": "bin/console clean-directories cache log",
        "database:create": "bin/console dbal:database:create --if-not-exists",
        "database:drop": "bin/console dbal:database:drop --if-exists --force",
        "database:schema:update": "bin/console orm:schema-tool:update --complete --force --dump-sql",
        "database:schema:validate": "bin/console orm:validate-schema",
        "fix:cs": "mkdir -p build && PHP_CS_FIXER_IGNORE_ENV=1 vendor/bin/php-cs-fixer fix --cache-file=build/phpcs.cache",
        "setup:dev": [
            "@database:drop --env=dev",
            "@database:create --env=dev",
            "@database:schema:update --env=dev",
            "@database:schema:validate --env=dev",
            "@clean-directories --env=dev"
        ],
        "setup:phpunit": [
            "@database:drop --env=phpunit",
            "@database:create --env=phpunit",
            "@database:schema:update --env=phpunit",
            "@database:schema:validate --env=phpunit",
            "@clean-directories --env=phpunit"
        ],
        "test": [
            "@test:lint",
            "@test:unit",
            "@test:integration",
            "@test:infection",
            "@test:static-analysis",
            "@test:loc",
            "@test:cs"
        ],
        "test:cs": "mkdir -p build && PHP_CS_FIXER_IGNORE_ENV=1 vendor/bin/php-cs-fixer fix --dry-run --stop-on-violation --cache-file=build/phpcs.cache",
        "test:infection": "vendor/bin/infection --threads=$(nproc) --min-msi=96 --verbose --coverage=build/phpunit",
        "test:integration": "vendor/bin/phpunit --testsuite=Integration --cache-result-file=build/phpunit/result.cache",
        "test:lint": "mkdir -p build && find src tests -name '*.php' -print0 | xargs -0 -n1 -P$(nproc) php -l | tee build/phplint.log",
        "test:static-analysis": "mkdir -p build && bash -c 'vendor/bin/phpstan analyse src --no-progress --level=8 --error-format=junit | tee build/phpstan.junit.xml; if [ ${PIPESTATUS[0]} -ne \"0\" ]; then exit 1; fi'",
        "test:loc": "mkdir -p build && vendor/bin/phploc src | tee build/phploc.log",
        "test:unit": "vendor/bin/phpunit --testsuite=Unit --coverage-text --coverage-clover=build/phpunit/clover.xml --coverage-html=build/phpunit/coverage-html --coverage-xml=build/phpunit/coverage-xml --log-junit=build/phpunit/junit.xml --cache-result-file=build/phpunit/result.cache"
    }
}
